#!/bin/bash -e
    # PROGRAM NAME
    #   matrix
    # EXECUTION
    #   matrix OPERATION [ARGUMENT]...
    #   Performs the specified operation on 0 or more rectangular 
    #   matrix arguments and outputs the result to the console.
    # INPUTS
    #   matrix dims [MATRIX] - reads the file specified or a matrix provided
    #       via stdin
    #   matrix transpose [MATRIX] - reads the file specified or a matrix provided
    #       via stdin
    #   matrix mean [MATRIX] - reads the file specified or a matrix provided
    #       via stdin
    #   matrix add MATRIX_LEFT MATRIX_RIGHT
    #   matrix multiply MATRIX_LEFT MATRIX_RIGHT
    # OUTPUTS
    #   dims - prints the dimensions of the matrix as "[N rows] [M columns]"
    #   transpose - reflects the matrix along the main diagonal.
    #   mean - 1xN row vector, where the first element is the mean of column
    #           one, the second element is the mean of column two, and so on
    #   add - the element-wie sum of two MxN matrices 
    #   multiply - the product of an MxN matrix and NxP matrix
    # AUTHOR
    #   Written by Kendra Ellis (ellisken@oregonstate.edu) for 
    #   CS344 Intro to Operating Systems Project 1 Winter 2018


# Global Variables
matrix=temp_matrix$$
err_msg1="Too few arguments. Program exiting."

# Trap statement to clean up in case of interruption, hang up, or termination
trap "rm -f $tempinput; rm -f $matrix; echo 'Ctrl-C entered. Exiting'; exit 1" INT HUP TERM 

# Function Definitions

error(){
    # NAME
    #   error()
    # DESCRIPTION
    #   Sends error message to stdout and exits with non-zero status
    # INPUTS
    #   1. A message string 
    # OUTPUTS
    #   Writes to stderr
    # AUTHOR
    #   Kendra Ellis (ellisken@oregonstate.edu)

    echo "$1" >&2
    exit 1
}


    # NAME
    # DESCRIPTION
    # INPUTS
    # OUTPUTS
    # NOTES

# Read input and store in tempin
#while read myinput
#do
#    echo "$myinput" >>$tempinput
#done < /dev/stdin

# Validate number of args is at least 1 and
# no greater than 2
if [ "$#" -lt 1 ]
then
    error "$err_msg1"
fi

# Check if "dims" "transpose" or "mean"
if [ "$1" = "dims" ] || [ "$1" = "transpose" ] || [ "$1" = "mean" ]
then
    echo -e "You entered dims, transpose, or mean"
    # If no file specified, use input from stdin
    if [ "$#" == 1 ]
    then
        cat > $matrix
    fi
    # Else if file specified, save to tempin
    if [ "$#" == 2 ]
    then
        cat "$2" > $matrix
    fi

# Then perform the operation and save in tempout
fi                                                                                                  
# Else if operation is add or multiply
# validate number of args, file readability, and matrix
# dimensions using dim
# If invalid, echo error message to stderr and exit
# Else, perform selected operation

# Print contents of tempout file to console and quit


